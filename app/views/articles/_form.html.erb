<!-- Form -->

<%= form_for @article, :html => { :multipart => true } do |a| %>

	<%= a.hidden_field :google_id, :value => @google_id %>
<span class="input input--minoru">
	<%= a.text_field :location, class: "input__field input__field--yoko", id: "placeName" %>
		<label class="input__label input__label--yoko" for="placeName">
			<span class="input__label-content input__label-content--yoko"><%= a.label :location %></span>
		</label>
</span>

<br/>

<span class="input input--minoru">
	<%= a.text_field :title, class: "input__field input__field--yoko", id: "input-16" %>
	<label class="input__label input__label--yoko" for="input-16">
		<span class="input__label-content input__label-content--yoko"><%= a.label :title %> </span>
	</label>
</span>

<br/>

<span class="input input--minoru">
	<%= a.text_area :body, cols: "30", rows: "10", class: "input__field input__field--yoko", id: "input-17" %>
	<label class="input__label input__label--yoko" for="input-17" id="ryan">
		<span class="input__label-content input__label-content--yoko"><%= a.label :body %> </span>
	</label>
</span>


<br/><br/>

<div class="form-group">
  
  <div class="choose-image"><%= a.file_field :image %></div>

  <div class="line-separator"></div>
  
  <span class="imagelabel"><%= a.label :image %></span>
	
</div>

<br/>

<%= a.submit 'Submit', class: "btn btn-primary" %>

<% end %>

<br/>



<!-- Script -->

<script src="js/classie.js"></script>
<script>
	(function() {
		// trim polyfill : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim
		if (!String.prototype.trim) {
			(function() {
				// Make sure we trim BOM and NBSP
				var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
				String.prototype.trim = function() {
					return this.replace(rtrim, '');
				};
			})();
		}
		[].slice.call( document.querySelectorAll( 'input.input__field' ) ).forEach( function( inputEl ) {
			// in case the input is already filled..
			if( inputEl.value.trim() !== '' ) {
				classie.add( inputEl.parentNode, 'input--filled' );
			}
			// events:
			inputEl.addEventListener( 'focus', onInputFocus );
			inputEl.addEventListener( 'blur', onInputBlur );
		} );
		function onInputFocus( ev ) {
			classie.add( ev.target.parentNode, 'input--filled' );
		}
		function onInputBlur( ev ) {
			if( ev.target.value.trim() === '' ) {
				classie.remove( ev.target.parentNode, 'input--filled' );
			}
		}
	})();
</script>